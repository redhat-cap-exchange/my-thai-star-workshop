{
  "id": "cloud-native",
  "name": "Cloud-Native",
  "description": "Stack for Cloud-Native Development",
  "scope": "general",
  "workspaceConfig": {
    "environments": {
      "default": {
        "recipe": {
          "type": "dockerimage",
          "content": "docker-registry.default.svc:5000/openshift/che-cloud-native"
        },
        "machines": {
          "dev-machine": {
            "env": {
              "MAVEN_OPTS" : "-Xmx512m",
              "MAVEN_MIRROR_URL": "http://nexus.{{ namespace }}.svc:8081/repository/maven-all-public"
            },
            "servers": {
              "8080/tcp": {
                "attributes": {},
                "protocol": "http",
                "port": "8080"
              },
              "8000/tcp": {
                "attributes": {},
                "protocol": "http",
                "port": "8000"
              },
              "9000/tcp": {
                "attributes": {},
                "protocol": "http",
                "port": "9000"
              },
              "9001/tcp": {
                "attributes": {},
                "protocol": "http",
                "port": "9001"
              }
            },
            "volumes": {},
            "installers": [
              "org.eclipse.che.exec",
              "org.eclipse.che.terminal",
              "org.eclipse.che.ws-agent",
              "org.eclipse.che.ls.java"
            ],
            "attributes": {
              "memoryLimitBytes": "2147483648"
            }
          }
        }
      }
    },
    "commands": [
      {
        "commandLine": "mvn package -f ${current.project.path}",
        "name": "build",
        "type": "mvn",
        "attributes": {
          "goal": "Build",
          "previewUrl": ""
        }
      },
      {
        "commandLine": "mvn clean package -f ${current.project.path}",
        "name": "clean build",
        "type": "mvn",
        "attributes": {
          "goal": "Build",
          "previewUrl": ""
        }
      },
      {
        "commandLine": "mvn verify -f ${current.project.path}",
        "name": "test",
        "type": "mvn",
        "attributes": {
          "goal": "Test",
          "previewUrl": ""
        }
      },
      {
        "commandLine": "mvn spring-boot:run -f ${current.project.path}",
        "name": "spring-boot:run",
        "type": "mvn",
        "attributes": {
          "goal": "Run",
          "previewUrl": "${server.9000/tcp}"
        }
      },
      {
        "commandLine": "cd ${current.project.path} && java -Dswarm.http.port=9001 -jar target/*-thorntail.jar ",
        "name": "thorntail:run",
        "type": "mvn",
        "attributes": {
          "goal": "Run",
          "previewUrl": "${server.9001/tcp}"
        }
      },
      {
        "commandLine": "mvn vertx:run -f ${current.project.path}",
        "name": "vertx:run",
        "type": "mvn",
        "attributes": {
          "goal": "Run",
          "previewUrl": "${server.9001/tcp}"
        }
      },
      {
        "commandLine": "username=${workspace.namespace}\nprojectname=coolstore${username#user}\nchmod +x /projects/labs/scripts/runGatewayService.sh\n/projects/labs/scripts/runGatewayService.sh ${projectname}",
        "name": "runGatewayService",
        "attributes": {
          "goal": "Run",
          "previewUrl": ""
        },
        "type": "custom"
      },
      {
        "commandLine": "cd ${current.project.path} && mvn fabric8:deploy",
        "name": "fabric8:deploy",
        "type": "mvn",
        "attributes": {
          "goal": "Deploy",
          "previewUrl": ""
        }
      },
      {
          "commandLine": "oc rollout pause dc/cart\noc set probe dc/cart --readiness --liveness --remove\noc patch dc/cart --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"true\"}}}}}'\noc rollout resume dc/cart", 
          "name": "Cart Service: Inject Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/cart\noc set probe dc/cart --readiness --liveness --remove\noc patch dc/cart --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"false\"}}}}}'\noc rollout resume dc/cart", 
          "name": "Cart Service: Remove Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/catalog\noc set probe dc/catalog --readiness --liveness --remove\noc patch dc/catalog --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"true\"}}}}}'\noc patch dc/catalog --patch '{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"spring-boot\", \"command\" : [\"/bin/bash\"], \"args\": [\"-c\", \"until $(curl -o /dev/null -s -I -f http://localhost:15000); do echo \\\"Waiting for Istio Sidecar...\\\"; sleep 1; done; sleep 10; /usr/local/s2i/run\"]}]}}}}'\noc rollout resume dc/catalog", 
          "name": "Catalog Service: Inject Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/catalog\noc set probe dc/catalog --readiness --liveness --remove\noc patch dc/catalog --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"false\"}}}}}'\noc patch dc/catalog --patch '{ \"op\": \"remove\", \"path\": \"/spec/template/spec/containers/command\" }'\noc patch dc/catalog --patch '{ \"op\": \"remove\", \"path\": \"/spec/template/spec/containers/args\" }'\noc rollout resume dc/catalog", 
          "name": "Catalog Service: Remove Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/catalog-v2\noc set probe dc/catalog-v2 --readiness --liveness --remove\noc patch dc/catalog-v2 --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"true\"}}}}}'\noc rollout resume dc/catalog-v2", 
          "name": "Catalog-v2 Service: Inject Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/catalog-v2\noc set probe dc/catalog-v2 --readiness --liveness --remove\noc patch dc/catalog-v2 --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"false\"}}}}}'\noc rollout resume dc/catalog-v2", 
          "name": "Catalog-v2 Service: Remove Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/inventory\noc set probe dc/inventory --readiness --liveness --remove\noc patch dc/inventory --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"true\"}}}}}'\noc patch dc/inventory --patch '{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"thorntail-v2\", \"command\" : [\"/bin/bash\"], \"args\": [\"-c\", \"until $(curl -o /dev/null -s -I -f http://localhost:15000); do echo \\\"Waiting for Istio Sidecar...\\\"; sleep 1; done; sleep 10; /usr/local/s2i/run\"]}]}}}}'\noc rollout resume dc/inventory", 
          "name": "Inventory Service: Inject Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/inventory\noc set probe dc/inventory --readiness --liveness --remove\noc patch dc/inventory --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"false\"}}}}}'\noc patch dc/inventory --patch '{ \"op\": \"remove\", \"path\": \"/spec/template/spec/containers/command\" }'\noc patch dc/inventory --patch '{ \"op\": \"remove\", \"path\": \"/spec/template/spec/containers/args\" }'\noc rollout resume dc/inventory", 
          "name": "Inventory Service: Remove Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      },
      {
          "commandLine": "oc rollout pause dc/gateway\noc set probe dc/gateway --readiness --liveness --remove\noc patch dc/gateway --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"true\"}}}}}'\noc patch dc/gateway --patch '{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"vertx\", \"command\" : [\"/bin/bash\"], \"args\": [\"-c\", \"until $(curl -o /dev/null -s -I -f http://localhost:15000); do echo \\\"Waiting for Istio Sidecar...\\\"; sleep 1; done; sleep 10; /usr/local/s2i/run\"]}]}}}}'\noc rollout resume dc/gateway", 
          "name": "Gateway Service: Inject Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type":"custom"
      },
      {
          "commandLine": "oc rollout pause dc/gateway\noc set probe dc/gateway --readiness --liveness --remove\noc patch dc/gateway --patch '{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"sidecar.istio.io/inject\": \"false\"}}}}}'\noc patch dc/gateway --patch '{ \"op\": \"remove\", \"path\": \"/spec/template/spec/containers/command\" }'\noc patch dc/gateway --patch '{ \"op\": \"remove\", \"path\": \"/spec/template/spec/containers/args\" }'\noc rollout resume dc/gateway", 
          "name": "Gateway Service: Remove Istio Sidecar", 
          "attributes": {
              "goal":"Service Mesh",
              "previewUrl":""
          }, 
          "type": "custom"
      }
    ],
    "projects": [],
    "defaultEnv": "default",
    "name": "default",
    "links": []
  },
  "components": [
    {
      "version": "---",
      "name": "CentOS"
    },
    {
      "version": "1.8.0_45",
      "name": "JDK"
    },
    {
      "version": "3.2.2",
      "name": "Maven"
    },
    {
      "version": "2.6",
      "name": "Ansible"
    },
    {
      "version": "3.11",
      "name": "OpenShift CLI"
    },
    {
      "version": "0.0.19",
      "name": "OpenShift DO"
    }
  ],
  "creator": "ide",
  "tags": [
    "Java",
    "JDK",
    "Maven",
    "CentOS",
    "Git"
  ]
}